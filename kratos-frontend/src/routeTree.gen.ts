/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyImport } from './routes/verify'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as SecuredImport } from './routes/_secured'
import { Route as IndexImport } from './routes/index'
import { Route as SecuredProfileImport } from './routes/_secured/profile'

// Create/Update Routes

const VerifyRoute = VerifyImport.update({
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const SecuredRoute = SecuredImport.update({
  id: '/_secured',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SecuredProfileRoute = SecuredProfileImport.update({
  path: '/profile',
  getParentRoute: () => SecuredRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_secured': {
      id: '/_secured'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SecuredImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/verify': {
      id: '/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof VerifyImport
      parentRoute: typeof rootRoute
    }
    '/_secured/profile': {
      id: '/_secured/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof SecuredProfileImport
      parentRoute: typeof SecuredImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SecuredRoute: SecuredRoute.addChildren({ SecuredProfileRoute }),
  LoginRoute,
  RegisterRoute,
  VerifyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_secured",
        "/login",
        "/register",
        "/verify"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_secured": {
      "filePath": "_secured.tsx",
      "children": [
        "/_secured/profile"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/verify": {
      "filePath": "verify.tsx"
    },
    "/_secured/profile": {
      "filePath": "_secured/profile.tsx",
      "parent": "/_secured"
    }
  }
}
ROUTE_MANIFEST_END */
